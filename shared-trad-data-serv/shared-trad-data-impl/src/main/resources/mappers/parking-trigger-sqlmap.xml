<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.suparking.data.dao.mapper.">
    <resultMap id="BaseResultMap" type="com.dao.entity.datadic.SpkParkingTrigger0">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="recog_time" jdbcType="BIGINT" property="recogTime" />
        <result column="open_time" jdbcType="BIGINT" property="openTime" />
        <result column="park_id" jdbcType="VARCHAR" property="parkId" />
        <result column="park_name" jdbcType="VARCHAR" property="parkName" />
        <result column="in_sub_area_id" jdbcType="VARCHAR" property="inSubAreaId" />
        <result column="in_sub_area_name" jdbcType="VARCHAR" property="inSubAreaName" />
        <result column="out_sub_area_id" jdbcType="VARCHAR" property="outSubAreaId" />
        <result column="out_sub_area_name" jdbcType="VARCHAR" property="outSubAreaName" />
        <result column="park_no" jdbcType="VARCHAR" property="parkNo" />
        <result column="car_type_id" jdbcType="VARCHAR" property="carTypeId" />
        <result column="car_type_name" jdbcType="VARCHAR" property="carTypeName" />
        <result column="left_day" jdbcType="INTEGER" property="leftDay" />
        <result column="space_quantity" jdbcType="INTEGER" property="spaceQuantity" />
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated" />
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated" />
        <result column="operator" jdbcType="VARCHAR" property="operator" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>

    <sql id="Base_Column_List">
        id,
		project_id,
		recog_time,
		open_time,
		park_id,
		park_name,
		in_sub_area_id,
		in_sub_area_name,
		out_sub_area_id,
		out_sub_area_name,
		park_no,
		car_type_id,
		car_type_name,
		left_day,
		space_quantity,
		date_created,
		date_updated,
		operator,
		remark
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="map">
        delete from spk_parking_trigger_0
        where
            id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="cn.suparking.customer.dao.entity.SpkParkingTrigger0">
        INSERT INTO spk_parking_trigger_0
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="recogTime != null">
                recog_time,
            </if>
            <if test="openTime != null">
                open_time,
            </if>
            <if test="parkId != null">
                park_id,
            </if>
            <if test="parkName != null">
                park_name,
            </if>
            <if test="inSubAreaId != null">
                in_sub_area_id,
            </if>
            <if test="inSubAreaName != null">
                in_sub_area_name,
            </if>
            <if test="outSubAreaId != null">
                out_sub_area_id,
            </if>
            <if test="outSubAreaName != null">
                out_sub_area_name,
            </if>
            <if test="parkNo != null">
                park_no,
            </if>
            <if test="carTypeId != null">
                car_type_id,
            </if>
            <if test="carTypeName != null">
                car_type_name,
            </if>
            <if test="leftDay != null">
                left_day,
            </if>
            <if test="spaceQuantity != null">
                space_quantity,
            </if>
            <if test="dateCreated != null">
                date_created,
            </if>
            <if test="dateUpdated != null">
                date_updated,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=BIGINT},
            </if>
            <if test="recogTime != null">
                #{recogTime,jdbcType=BIGINT},
            </if>
            <if test="openTime != null">
                #{openTime,jdbcType=BIGINT},
            </if>
            <if test="parkId != null">
                #{parkId,jdbcType=VARCHAR},
            </if>
            <if test="parkName != null">
                #{parkName,jdbcType=VARCHAR},
            </if>
            <if test="inSubAreaId != null">
                #{inSubAreaId,jdbcType=VARCHAR},
            </if>
            <if test="inSubAreaName != null">
                #{inSubAreaName,jdbcType=VARCHAR},
            </if>
            <if test="outSubAreaId != null">
                #{outSubAreaId,jdbcType=VARCHAR},
            </if>
            <if test="outSubAreaName != null">
                #{outSubAreaName,jdbcType=VARCHAR},
            </if>
            <if test="parkNo != null">
                #{parkNo,jdbcType=VARCHAR},
            </if>
            <if test="carTypeId != null">
                #{carTypeId,jdbcType=VARCHAR},
            </if>
            <if test="carTypeName != null">
                #{carTypeName,jdbcType=VARCHAR},
            </if>
            <if test="leftDay != null">
                #{leftDay,jdbcType=INTEGER},
            </if>
            <if test="spaceQuantity != null">
                #{spaceQuantity,jdbcType=INTEGER},
            </if>
            <if test="dateCreated != null">
                #{dateCreated,jdbcType=TIMESTAMP},
            </if>
            <if test="dateUpdated != null">
                #{dateUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="insertBatchList" parameterType="java.util.List">
        insert into spk_parking_trigger_0 (
        id ,
        project_id ,
        recog_time ,
        open_time ,
        park_id ,
        park_name ,
        in_sub_area_id ,
        in_sub_area_name ,
        out_sub_area_id ,
        out_sub_area_name ,
        park_no ,
        car_type_id ,
        car_type_name ,
        left_day ,
        space_quantity ,
        date_created ,
        date_updated ,
        operator ,
        remark
        ) VALUES
        <foreach collection ="list" item="item" separator =",">
            (
            #{item.id,jdbcType=BIGINT} ,
            #{item.projectId,jdbcType=BIGINT} ,
            #{item.recogTime,jdbcType=BIGINT} ,
            #{item.openTime,jdbcType=BIGINT} ,
            #{item.parkId,jdbcType=VARCHAR} ,
            #{item.parkName,jdbcType=VARCHAR} ,
            #{item.inSubAreaId,jdbcType=VARCHAR} ,
            #{item.inSubAreaName,jdbcType=VARCHAR} ,
            #{item.outSubAreaId,jdbcType=VARCHAR} ,
            #{item.outSubAreaName,jdbcType=VARCHAR} ,
            #{item.parkNo,jdbcType=VARCHAR} ,
            #{item.carTypeId,jdbcType=VARCHAR} ,
            #{item.carTypeName,jdbcType=VARCHAR} ,
            #{item.leftDay,jdbcType=INTEGER} ,
            #{item.spaceQuantity,jdbcType=INTEGER} ,
            #{item.dateCreated,jdbcType=TIMESTAMP} ,
            #{item.dateUpdated,jdbcType=TIMESTAMP} ,
            #{item.operator,jdbcType=VARCHAR} ,
            #{item.remark,jdbcType=VARCHAR}
            )
        </foreach >
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.dao.entity.datadic.SpkParkingTrigger0">
        UPDATE spk_parking_trigger_0 <set>
        <if test="projectId != null">
            project_id = #{projectId,jdbcType=BIGINT} , </if>
        <if test="recogTime != null">
            recog_time = #{recogTime,jdbcType=BIGINT} , </if>
        <if test="openTime != null">
            open_time = #{openTime,jdbcType=BIGINT} , </if>
        <if test="parkId != null">
            park_id = #{parkId,jdbcType=VARCHAR} , </if>
        <if test="parkName != null">
            park_name = #{parkName,jdbcType=VARCHAR} , </if>
        <if test="inSubAreaId != null">
            in_sub_area_id = #{inSubAreaId,jdbcType=VARCHAR} , </if>
        <if test="inSubAreaName != null">
            in_sub_area_name = #{inSubAreaName,jdbcType=VARCHAR} , </if>
        <if test="outSubAreaId != null">
            out_sub_area_id = #{outSubAreaId,jdbcType=VARCHAR} , </if>
        <if test="outSubAreaName != null">
            out_sub_area_name = #{outSubAreaName,jdbcType=VARCHAR} , </if>
        <if test="parkNo != null">
            park_no = #{parkNo,jdbcType=VARCHAR} , </if>
        <if test="carTypeId != null">
            car_type_id = #{carTypeId,jdbcType=VARCHAR} , </if>
        <if test="carTypeName != null">
            car_type_name = #{carTypeName,jdbcType=VARCHAR} , </if>
        <if test="leftDay != null">
            left_day = #{leftDay,jdbcType=INTEGER} , </if>
        <if test="spaceQuantity != null">
            space_quantity = #{spaceQuantity,jdbcType=INTEGER} , </if>
        <if test="dateCreated != null">
            date_created = #{dateCreated,jdbcType=TIMESTAMP} , </if>
        <if test="dateUpdated != null">
            date_updated = #{dateUpdated,jdbcType=TIMESTAMP} , </if>
        <if test="operator != null">
            operator = #{operator,jdbcType=VARCHAR} , </if>
        <if test="remark != null">
            remark = #{remark,jdbcType=VARCHAR}  </if>
    </set>
        WHERE
        id = #{id,jdbcType=BIGINT}
    </update>


    <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
        select  id,project_id,recog_time,open_time,park_id,park_name,in_sub_area_id,in_sub_area_name,out_sub_area_id,out_sub_area_name,park_no,car_type_id,car_type_name,left_day,space_quantity,date_created,date_updated,operator,remark
        from spk_parking_trigger_0
        where
            id = #{id,jdbcType=BIGINT}

    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
            id,

            project_id,

            recog_time,

            open_time,

            park_id,

            park_name,

            in_sub_area_id,

            in_sub_area_name,

            out_sub_area_id,

            out_sub_area_name,

            park_no,

            car_type_id,

            car_type_name,

            left_day,

            space_quantity,

            date_created,

            date_updated,

            operator,

            remark
        from spk_parking_trigger_0
    </select>
    <update id="deleteByPrimaryKeys" parameterType="java.lang.String">
        update spk_parking_trigger_0 set state = -100
        where id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <select id="search"  parameterType="map" resultType="com.dao.entity.datadic.SpkParkingTrigger0">
        select
        a.id as id,

        a.project_id as projectId,

        a.recog_time as recogTime,

        a.open_time as openTime,

        a.park_id as parkId,

        a.park_name as parkName,

        a.in_sub_area_id as inSubAreaId,

        a.in_sub_area_name as inSubAreaName,

        a.out_sub_area_id as outSubAreaId,

        a.out_sub_area_name as outSubAreaName,

        a.park_no as parkNo,

        a.car_type_id as carTypeId,

        a.car_type_name as carTypeName,

        a.left_day as leftDay,

        a.space_quantity as spaceQuantity,

        a.date_created as dateCreated,

        a.date_updated as dateUpdated,

        a.operator as operator,

        a.remark as remark
        from spk_parking_trigger_0 a
        where a.state != -100
        <if test="states != null and states.size > 0 ">
            and a.state in
            <foreach collection="states" item="state" index="index" open="(" close=")" separator=",">
                #{state}
            </foreach>
        </if>

    </select>


</mapper>
